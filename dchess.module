<?php
/**
 * Implements hook_permission().
 */
function dchess_permission() {
  return array(
    'administer dchess games' =>  array(
      'title' => t('Administer Chess Games'),
      'description' => t('Allows users to create/edit/delete chess games'),
    ),
    'view dchess games' => array(
      'title' => t('View Chess Games'),
      'description' => t('Allow users to participate in/view  a chess game.'),
    ),
  );
}

/**
 *  Implements hook_nodejs_handlers_info
 */
function dchess_nodejs_handlers_info() {
  return array(
    drupal_get_path('module', 'dchess').'/scripts/dchess.controllers.js',
  );
}

/**
 * Implements hook_nodejs_message_callback
 */
function dchess_nodejs_message_callback($type) {
  watchdog('dchess', "message recieved from node of type: " . $type, array(), WATCHDOG_INFO);
  switch($type) {
    case 'move':
      return array('dchess_record_move');
  }
  return false;
}

function dchess_record_move($message, &$responce) {
  watchdog('dchess', "message recieved from node: " . $message['channel'], array(), WATCHDOG_INFO);
  $responce = "Derpal got the message \n";
  if(isset($message['channel'])) {
    $game_id = explode('_', $message['channel']);
    $game_node = new stdClass;
    $game_node->nid = array_pop($game_id);
    $game_node->type = "chess_game";
    $game_node->field_fen['und'][0]['value'] = $message['moveFen'];
    node_save($game_node);
    if(!$game_node->nid) {
      $responce .= "ERROR: Node did not save!";
    }
    else {
      $responce .= "Success! Node updated.";
    }
  }
  else {
    $responce .= "ERROR: Invalid message, no channel id";
  }
}

/**
 * Implements hook_theme().
 */
function dchess_theme($existing, $type, $theme, $path) {
  return array(
    'dchess_board' => array(
      'template' => 'dchess_board',
    ),
  );
}

/**
 * Implements hook_library().
 */
function dchess_library() {
  $libraries['chessjs'] = array(
    'title' => 'chess.js',
    'website' => 'https://github.com/jhlywa/chess.js',
    'version' => '0.1',
    'js' => array(
      drupal_get_path('module', 'dchess') . '/chess.js/chess.js' => array(),
    ),
  );
  $libraries['drupal_chess'] = array(
    'title' => 'Drupal Chess.js',
    'version' => '0.1',
    'js' => array(
      //drupal_get_path('module', 'dchess') . '/angular/angular.min.js' => array(),
      'https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js' => array(),
      drupal_get_path('module', 'dchess') . '/scripts/dchess.service.js' => array('scope' => 'footer'),
      drupal_get_path('module', 'dchess') . '/scripts/dchess.controllers.js' => array('scope' => 'footer'),
      drupal_get_path('module', 'dchess') . '/scripts/dchess.client.js' => array('scope' => 'footer'),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_node_view().
 */
function dchess_node_view($node, $view_mode, $langcode) {
  if($node->type == 'chess_game') {
    //global $user;
    //nodejs_add_user_to_channel($user->uid, 'dchess_game_' . $node->nid);
    nodejs_send_content_channel_token('dchess_game_' . $node->nid);
    dchess_game_to_json($node);
    drupal_add_library('dchess', 'chessjs');
    drupal_add_library('dchess', 'drupal_chess');
    drupal_add_css(drupal_get_path('module', 'dchess').'/dchess_board.css');
    return $node;
  }
}

/**
 * Helper function to encode relavent game data to JSON
 */
function dchess_game_to_json($game_node) {
  global $user;
  $game = array(
    'w' => $game_node->uid, 
    'b' => $game_node->field_opponent['und'][0]['target_id'],
    'color' => '',
    'game_id' => $game_node->nid,
    'game_fen' => $game_node->field_fen['und'][0]['value'],
  );
  if($user->uid == $game_node->uid) {
    $game['color'] = 'w';
  }
  elseif($user->uid == $game_node->field_opponent['und'][0]['target_id']) {
    $game['color'] = 'b';
  }
  drupal_add_js(array('dchess' => drupal_json_encode($game)), array('type' => 'setting'));
}

/**
 * Implements hook_theme_registry_alter().
 */
function dchess_theme_registry_alter(&$theme_registry) {
  $dchess_path = drupal_get_path('module', 'dchess');
  $tr_munge = $theme_registry;
  _theme_process_registry($tr_munge, 'phptemplate', 'theme_engine', 'pow', $dchess_path);
  $theme_registry += array_diff_key($tr_munge, $theme_registry);
  _dchess_insert_second($theme_registry['node']['theme paths'], $dchess_path);
}

/**
 * Helper function to adjust theme registry array.
 */
function _dchess_insert_second(&$arr_alter, $element){
  if(is_array($arr_alter)) {
    $first_elem = array_shift($arr_alter);
    array_unshift($arr_alter, $first_element, $element);
  }
}
